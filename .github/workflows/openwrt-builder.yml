name: Build OpenWrt

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Display disk usage before cleanup
      run: df -h

    - name: Cleanup disk space
      run: |
        sudo apt-get clean
        sudo rm -rf /var/lib/apt/lists/*
        docker system prune -af

    - name: Display disk usage after cleanup
      run: df -h

    - name: Setup OpenWrt build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev gawk git subversion libssl-dev gettext unzip zlib1g-dev file wget

    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Get source code
      run: |
        git clone --depth 1 ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt

    - name: Run DIY scripts part 1
      run: |
        cd openwrt
        chmod +x ../diy-part1.sh
        ../diy-part1.sh

    - name: Configure build
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        if [ -f ${{ env.CONFIG_FILE }} ]; then
          cp ${{ env.CONFIG_FILE }} .config
        fi

    - name: Run DIY scripts part 2
      run: |
        cd openwrt
        chmod +x ../diy-part2.sh
        ../diy-part2.sh

    - name: Display disk usage before build
      run: df -h

    - name: Build OpenWrt
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc) V=s
        make -j1 V=s 2>&1 | tee build.log
      continue-on-error: true

    - name: Upload build logs if build fails
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: Build Logs
        path: openwrt/build.log
        if-no-files-found: warn

    - name: Upload firmware
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt Firmware
        path: |
          openwrt/bin/targets/**/openwrt-*-generic-squashfs-rootfs.img.gz
          openwrt/bin/targets/**/openwrt-*-generic-squashfs-combined-efi.img.gz
        if-no-files-found: warn

    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
        repository: jr94330/OpenWrt-firmware
        event-type: Source Code Update

    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 3
        delete_tags: true
        keep_min_download_counts: 0
        delete_expired_data: 0
        delete_prerelease_only: false
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TRIGGER_PAT }}
        REPO_URL: $REPO_URL
        REPO_BRANCH: $REPO_BRANCH
        FEEDS_CONF: $FEEDS_CONF
        CONFIG_FILE: $CONFIG_FILE
        DIY_P1_SH: $DIY_P1_SH
        DIY_P2_SH: $DIY_P2_SH
        UPLOAD_BIN_DIR: $UPLOAD_BIN_DIR
        UPLOAD_FIRMWARE: $UPLOAD_FIRMWARE
        UPLOAD_RELEASE: $UPLOAD_RELEASE
        TZ: $TZ
        FIRMWARE: $FIRMWARE

    - name: Clean up
      run: |
        sudo rm -rf /home/runner/work/*
        sudo rm -rf /home/runner/runners/*

    - name: Display final disk usage
      run: df -h

    - name: Create Release
      if: success()
      run: |
        release_id=$(curl -X POST \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/jr94330/OpenWrt-firmware/releases \
        -d '{"tag_name": "v1.0.0", "name": "Release 1.0.0", "body": "Release 1.0.0 Description", "draft": false, "prerelease": false}' \
        | jq -r '.id')

        curl -X POST \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://uploads.github.com/repos/jr94330/OpenWrt-firmware/releases/$release_id/assets?name=openwrt-firmware.img.gz \
        --upload-file path/to/openwrt-firmware.img.gz
